<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />
		
	<!-- @ResponseBody로 String 처리할때 한글처리 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list> 
						<value>text/html;charset=UTF-8</value> 
					</list> 
				</property> 
			</bean> 
		</mvc:message-converters> 
	</mvc:annotation-driven>
	<!-- 커넥션풀 생성 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://192.168.123.115:3306/guribyn?useUnicode=true&amp;characterEncoding=utf8"/>
        <property name="username" value="guribyn"/>
        <property name="password" value="pizza8282"/>
    </bean>   
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 세션생성시 사용할 dataSource주입 -->
        <property name="dataSource" ref="dataSource" />
        <!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:com/cafe24/guribyn/cate/CateMapper.xml</value>
                <value>classpath:com/cafe24/guribyn/login/LoginMapper.xml</value>
                <value>classpath:com/cafe24/guribyn/notice/NoticeMapper.xml</value>
                <value>classpath:com/cafe24/guribyn/employee/EmployeeMapper.xml</value>
                <value>classpath:com/cafe24/guribyn/room/RoomMapper.xml</value>
                <value>classpath:com/cafe24/guribyn/guest/GuestMapper.xml</value>
				<value>classpath:com/cafe24/guribyn/keep/KeepMapper.xml</value>
				<value>classpath:com/cafe24/guribyn/extra/ExtraMapper.xml</value>
				<value>classpath:com/cafe24/guribyn/event/EventMapper.xml</value>
				<value>classpath:com/cafe24/guribyn/booking/BookingMapper.xml</value>
				<value>classpath:com/cafe24/guribyn/delivery/DeliveryMapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- mybatis를 사용하여 db에접속하여 쿼리를 보내는 주체인 SqlSessionTemplate빈 생성-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">	
		<property name="dataSource" ref="dataSource" />	
	</bean>
    
    <tx:annotation-driven transaction-manager="transactionManager" />
    
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html; charset=UTF-8"/>
	</bean>
	
	<context:component-scan base-package="com.cafe24.guribyn" />
	
	<!-- 타일즈 설정  -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	    <property name="order" value="1"/>
	</bean>
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <property name="definitions">
	        <list>
	            <value>/WEB-INF/resources/tiles/tiles.xml</value>
	        </list>
	    </property>
	</bean>
	
	<!-- 컨트롤러로 요청 가기 전 인터셉트 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 하기 경로 접근시 컨트롤러보다 인터셉트를 먼저 거쳐야 함(모든 경로) -->
			<mvc:mapping path="/**"/>
			<!-- 하기 경로는 인터셉트를 거치지 않음(예외) -->			
			<mvc:exclude-mapping path="/"/>
			<mvc:exclude-mapping path="/resources/**"/>
			<mvc:exclude-mapping path="/login"/>
			<bean class="com.cafe24.guribyn.Interceptor"/>
		</mvc:interceptor>
		<!-- 뒤로가기 제한 -->
		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
	        <property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
			<property name="cacheMappings">
			<props> <!-- 하기 주소 뒤로가기 제한 -->
				<prop key="/">86400</prop>
			</props>
    		</property>
		</bean>	
	</mvc:interceptors>
	
</beans>
